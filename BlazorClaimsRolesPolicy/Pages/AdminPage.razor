@page "/Admin"

@using BlazorClaimsRolesPolicy.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Security.Claims

@inject IJSRuntime JSRuntime
@inject UserManager<IdentityUser> _userManager
@inject SignInManager<IdentityUser> _signInManager

<h3>AdminPage</h3>
<hr>

<EditForm Model="newUser" OnValidSubmit="AddUserWithRole">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="login" class="col-sm-2 col-form-label">Add User</label>
        <div class="col-sm-10">
            <InputText id="login" @bind-Value="newUser.LoginName" class="form-control"></InputText>
        </div>
        <label for="login" class="col-sm-2 col-form-label">Assign Role</label>
        <div class="col-sm-10">
            <InputSelect id="role-select" @bind-Value="newUser.UserRole" class="form-control">
                @foreach (var role in selectList)
                {
                    <option value="@role.Value" selected="@role.Selected">@role.Text</option>
                }
            </InputSelect>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    User newUser = new User();
    List<Role> rolesList = new List<Role>();
    List<SelectListItem> selectList = new List<SelectListItem>();

    protected override async Task OnInitializedAsync()
    {
        rolesList = new List<Role>()
        {
            new Role(){RoleName = "Admin", Id = "1"},
            new Role(){RoleName = "HR", Id = "2"},
            new Role(){RoleName = "Manager", Id = "3"},
            new Role(){RoleName = "User", Id = "4"}
        };

        foreach (Role role in rolesList)
        {
            if (rolesList.Count < 1)
            {
                selectList.Add(new SelectListItem()
                    {
                        Text = role.RoleName,
                        Value = role.Id,
                        Selected = true
                    }
                );
            }
            else
            {
                selectList.Add(new SelectListItem()
                    {
                        Text = role.RoleName,
                        Value = role.Id,
                        Selected = false
                    }
                );
            }
        }
    }

    public async Task AddUserWithRole(EditContext context)
    {
        var usermodel = context.Model as User;
    }
}
